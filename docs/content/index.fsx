(*** hide ***)
// This block of code is omitted in the generated HTML documentation. Use 
// it to define helpers that you do not want to show in the documentation.
#I "../../src/Vagabond/bin/Release/netstandard2.0"
#r "Vagabond.AssemblyParser.dll"
#r "Vagabond.dll"

open System
open System.Reflection

(**

# Vagabond

On-demand distribution of code (e.g. lambdas) for remote execution is a problem often 
exacerbated by the presence of dynamic assemblies. Dynamic assemblies appear in situations 
where code is emitted at runtime, such as interpreters, optimization libraries or F# type providers. 
By default, dynamic assemblies are not persistable. What's more, the inherently incremental nature 
of dynamic assemblies makes their exportation even more challenging.

Vagabond attempts to solve this problem by providing an automated dependency resolution and 
dynamic assembly compilation framework. It also addresses issues inherent in REPL loops. 
It fully supports code generated by F# Interactive and type providers.

It is based on the [Cecil](http://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/) 
and [FsPickler](http://mbraceproject.github.io/FsPickler) libraries and adapts code from JB Evain's
[AssemblySaver](https://github.com/jbevain/mono.reflection/blob/assembly-saver/Mono.Reflection/AssemblySaver.cs).

<div class="row">
  <div class="span1"></div>
  <div class="span6">
    <div class="well well-small" id="nuget">
      The Vagabond library can be <a href="https://nuget.org/packages/Vagabond">installed from NuGet</a>:
      <pre>PM> Install-Package Vagabond</pre>
    </div>
  </div>
  <div class="span1"></div>
</div>

## Example

To see a demo of Vagabond, build the solution and execute the 
[thunkServer.fsx](https://github.com/mbraceproject/Vagabond/blob/master/samples/ThunkServer/thunkServer.fsx) 
script found inside the samples folder. As the name suggests, 
it allows for execution of arbitrary thunks in a remote server.

## Documentation & Technical Overview

A collection of tutorials, technical overviews and API references of the library.

  * [API Overview](tutorial.html) An overview of the Vagabond API and examples.

  * [Technical Overview](overview.html) A walkthrough of the library's implementation details.

  * [API Reference](reference/index.html) contains automatically generated documentation for all types, 
    modules and functions in the library.

## Mono Support

Vagabond makes heavy use of the reflection API. Mono support is patchy for the moment, 
mostly due to a number of bugs in the mono runtime 
[[1](https://bugzilla.xamarin.com/show_bug.cgi?id=19045),[2](https://bugzilla.xamarin.com/show_bug.cgi?id=19039)].
If you would like to see stable Vagabond support in mono soon, 
make sure to contribute code/nag until these bugs are resolved.
 
## Contributing and copyright

The project is hosted on [GitHub][gh] where you can [report issues][issues], fork 
the project and submit pull requests.

The library is available under the MIT License. 
For more information see the [License file][license] in the GitHub repository. 

  [gh]: https://github.com/mbraceproject/Vagabond
  [issues]: https://github.com/mbraceproject/Vagabond/issues
  [license]: https://github.com/mbraceproject/Vagabond/blob/master/License.md

*)